function setLanguage(lang) {localStorage.setItem('lang',lang); const currentParts = window.location.pathname.split('/').slice(2); const restPath = currentParts.join('/') || 'index.html'; window.location.href = `/${lang}/${restPath}`;}function translatePage(lang) {const elements = document.querySelectorAll('[data-i18n]'); elements.forEach(el => {const key = el.getAttribute('data-i18n'); if (translations[lang] && translations[lang][key]) {el.innerHTML = translations[lang][key];}});}function detectBrowserLanguage() {const supported = Object.keys(translations); const browserLang = navigator.language.slice(0,2).toLowerCase(); return supported.includes(browserLang) ? browserLang :'en';}document.addEventListener("DOMContentLoaded",() => {const supported = ['en','hu','de','fr','nl','es']; const savedLang = localStorage.getItem('lang'); const parts = window.location.pathname.split('/'); const currentLang = parts[1]; const restPath = parts.slice(2).join('/') || 'index.html'; if (!savedLang && supported.includes(currentLang)) {localStorage.setItem('lang',currentLang);} if (savedLang && supported.includes(savedLang) && savedLang !== currentLang) {window.location.href = `/${savedLang}/${restPath}`; return;} const select = document.querySelector('#language'); if (select) {select.value = currentLang;} translatePage(currentLang || savedLang || detectBrowserLanguage());});